{"version":3,"sources":["apis/allPurposeApis.js","components/Sidebar.js","components/CustomForm.js","components/useOnClickOutside.js","components/Commentcomp/Commentcomp.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","getPostList","website","pageNo","a","url","axios","get","result","console","error","insertPost","param","post","insertCommets","data","Promise","resolve","reject","getCommets","postId","currentPage","castVote","vote","put","getTopCommentList","websitename","TabPane","Tabs","antIcon","LoadingOutlined","style","fontSize","spin","Sidebar","props","useState","setResult","topComments","setTopcomments","setPageNo","loading","setloading","handleScroll","e","target","scrollHeight","scrollTop","clientHeight","prev","results","next_page_number","useEffect","topCommentsResult","window","addEventListener","removeEventListener","placement","closable","onClose","setVisible","log","visible","width","className","defaultActiveKey","tab","onScroll","indicator","length","map","index","updated_date","onClick","open","openLink","link","title","openComment","comments_count","href","author_name","created_date","message","LikeOutlined","likes","DislikeOutlined","dislikes","cookies","Cookies","TextArea","Input","CustomForm","emojiPickerIsOpen","setemojiPickerIsOpen","visiblePicker","setVisiblePicker","email","setEmail","name","setName","inputRef","useRef","nameFromcookies","emailFromCookies","Form","useForm","form","ref","handler","handleClick","current","contains","document","useOnClickOutside","validateMessages","onFinish","values","user","sendMessage","parent","setFieldsValue","showDrawer","visibleDrawer","placeholder","rows","value","messageMain","inputData","onChange","setErrorMessage","id","search","comments","replies","preventDefault","type","onEmojiClick","event","emojiObject","emoji","disableSearchBar","execCommand","htmlType","color","Item","defaultValue","rules","setChecked","Commentcomp","setMessage","setMessageMain","checked","setchecked","setShowDrawer","setComments","setData","draw","setDraw","totalPages","setTotalPages","setId","like_count","setlike_count","setCurrentPage","dislikelike_count","setDislikelike_count","ID","total_pages","getComments","arr","i","messageId","arrayMutation","comment","forEach","required","types","number","range","set","maxAge","commentsUpdated","oldArray","response","errors","casetVoteFunc","onchangePgination","commentCount","cannotComment","Drawer","commentPannel","level","parent_name","openForm","icon","TwitterOutlined","MailOutlined","defaultCurrent","defaultPageSize","total","showSizeChanger","App","setID","setCannotComment","dataCount","setDataCount","getElementById","params","getAttribute","is_closed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a39900e.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseURL = \"https://803335b0ff30.in.ngrok.io/api/\";\n\nexport const getPostList = async (website, pageNo) => {\n    try {\n        const url = baseURL + `v1/posts/${website}/?page=${pageNo}`;\n        const result = await axios.get(url);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n};\nexport const insertPost = async (param) => {\n    try {\n        const url = baseURL + \"v1/post/\";\n        const result = await axios.post(url, param);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const insertCommets = (data) => {\n    // try {\n    const url = baseURL + \"v1/comment/\";\n    return new Promise(async (resolve, reject) => {\n        try {\n\n            const result = await axios.post(url, data)\n            resolve(result)\n        } catch (error) {\n            reject(error)\n        }\n    })\n};\n\nexport const getCommets = (postId, currentPage) => {\n    try {\n        if (postId > 0) {\n            if (currentPage === 1) {\n                const url = baseURL + `v1/comments/${postId}/`;\n                const result = axios.get(url);\n                return result;\n            }\n            const url = baseURL + `v1/comments/${postId}/?page=${currentPage}`;\n            const result = axios.get(url);\n            return result;\n        }\n    } catch (error) {\n        console.error(error);\n    }\n};\nexport const castVote = (postId, vote) => {\n    try {\n        const url = baseURL + `v1/comment/${postId}/`;\n        const result = axios.put(url, vote);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n};\nexport const getTopCommentList = (websitename) => {\n    try {\n        const url = baseURL + `v1/top-comments/${websitename}/`;\n        const result = axios.get(url);\n        return result;\n    } catch (error) {\n        console.error(error);\n    }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Drawer, Tabs } from \"antd\";\nimport postImage from \"../assets/images/post-img.jpeg\";\nimport \"./Sidebar.scss\";\nimport { getPostList, getTopCommentList } from \"../apis/allPurposeApis\";\nimport { DislikeOutlined, LikeOutlined } from \"@ant-design/icons\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nconst { TabPane } = Tabs;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\nfunction Sidebar(props) {\n  const [result, setResult] = useState([]);\n  const [topComments, setTopcomments] = useState([]);\n  const [pageNo, setPageNo] = useState(1);\n  const [loading, setloading] = useState(false);\n  useEffect(() => {\n    (async () => {\n      setloading(true)\n      const result = await getPostList(props.website, 1);\n      setResult(result?.data?.data?.results);\n      setPageNo(result?.data?.data?.next_page_number)\n      const topCommentsResult = await getTopCommentList(props.website);\n      setTopcomments(topCommentsResult?.data?.data?.results);\n      setloading(false)\n    })();\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  function handleScroll(e) {\n    //console.log(e.target.scrollHeight - e.target.scrollTop, e.target.clientHeight)\n    if (e.target.scrollHeight - e.target.scrollTop !== e.target.clientHeight) return;\n    else {\n      const result = async () => {\n        const result = await getPostList(props.website, pageNo);\n        setResult(prev => [...prev, ...result?.data?.data?.results]);\n        setPageNo(result?.data?.data?.next_page_number)\n        return\n      }\n      pageNo && result()\n    }\n  }\n  const onClose = () => {\n    try {\n      props.setVisible(false);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const openLink = (data) => {\n    try {\n      window.open(data);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const openComment = (data) => {\n    try {\n      window.open(data);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  return (\n\n    <Drawer\n      placement=\"right\"\n      closable={true}\n      onClose={onClose}\n      visible={props.visible}\n      width={630}\n    >\n      <div className=\"Header_drawer\">{props.website}</div>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Latest Discussions\" key=\"1\">\n          <div className=\"post-main\" onScroll={e => handleScroll(e)}>\n            {\n              loading ? <Spin indicator={antIcon} /> : result?.length > 0 &&\n                result.map((data, index) => (\n                  <div className=\"post-list\">\n                    <div className=\"post-list__info\">\n                      <p className=\"post-time\">\n                        Recent activity {data?.updated_date}\n                      </p>\n                      <h2 onClick={() => openLink(data?.link)}>{data?.title}</h2>\n                      <a onClick={() => openComment(data?.link)}>\n                        {data?.comments_count} Comments\n                    </a>\n                    </div>\n\n\n                  </div>\n                ))}\n          </div>\n        </TabPane>\n        <TabPane tab=\"Top Comments\" key=\"2\">\n          <div className=\"post_com\">\n            {topComments?.length > 0 &&\n              topComments.map((data, index) => (\n                <div className=\"top_comments_post\">\n                  {/* <div className=\"avatar\">\n                  <Avatar\n                    style={{ backgroundColor: \"#dbdfe4\" }}\n                    shape=\"square\"\n                    size={\"100%\"}\n                    icon={<UserOutlined />}\n                  />\n                </div> */}\n                  <div className=\"post_body\">\n                    <div className=\"comment_header\">\n                      <div className=\"post_byline\">\n                        <div className=\"post_username\">\n                          <a href=\"www.google.com\" target=\"_blank\">\n                            {data.author_name}\n                          </a>\n                        </div>\n                        {/* <div className=\"badge\">\n                          <Badge>MOD</Badge>\n                        </div> */}\n                      </div>\n                      {/* <span className=\"bullet\"></span> */}\n                      <div className=\"post_meta\">\n                        <span>{data.created_date}</span>\n                      </div>\n                    </div>\n                    <div className=\"comment_body\">\n                      <div className=\"post_comment\">\n                        <p>{data.message}</p>\n                      </div>\n                    </div>\n                    <div className=\"comment_footer\">\n                      <div className=\"post_like\">\n                        <a href=\"www.google.com\">\n                          <LikeOutlined />\n                          {data.likes}\n                        </a>\n                      </div>\n                      <div className=\"post_dislike\">\n                        <a href=\"www.google.com\">\n                          <DislikeOutlined />\n                          {data.dislikes}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </TabPane>\n      </Tabs>\n    </Drawer>);\n}\nexport default Sidebar;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Avatar, Checkbox, Form, Input, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport Cookies from \"universal-cookie\";\nimport Picker from \"emoji-picker-react\";\nimport useOnClickOutside from \"../components/useOnClickOutside\";\nconst cookies = new Cookies();\nconst { TextArea } = Input;\nconst CustomForm = (props) => {\n  const [emojiPickerIsOpen, setemojiPickerIsOpen] = useState(false);\n  const [visiblePicker, setVisiblePicker] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const inputRef = useRef();\n  const nameFromcookies = cookies.get(\"author_name\");\n  const emailFromCookies = cookies.get(\"author_email\");\n  const [form] = Form.useForm();\n  const ref = useRef();\n\n  useOnClickOutside(ref, () => {\n    setVisiblePicker(false);\n    setemojiPickerIsOpen(false);\n  });\n  const togglePicker = (e) => {\n    try {\n      e.preventDefault();\n      setemojiPickerIsOpen(!emojiPickerIsOpen);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const onEmojiClick = (event, emojiObject) => {\n    if (props.id === \"MainDrawer\") {\n      props.messageMain\n        ? props.onChange(props.messageMain + emojiObject.emoji, props.id)\n        : props.onChange(emojiObject.emoji, props.id);\n    } else {\n      props.message.message\n        ? props.onChange(\n          props.message.message + emojiObject.emoji,\n          props.parent\n        )\n        : props.onChange(emojiObject.emoji, props.parent);\n    }\n  };\n  const onChangeCheckBox = () => {\n    props.setChecked(true);\n  };\n  const undoText = () => {\n    try {\n      document.execCommand(\"undo\", false, null);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const redoText = (e) => {\n    try {\n      document.execCommand(\"redo\", false, null);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const checkMesssageType = (values) => {\n    try {\n      if (!values.user.name || !values.user.email) {\n        form.setFieldsValue({\n          user: {\n            name: nameFromcookies,\n            email: emailFromCookies,\n          },\n        });\n\n        setName(nameFromcookies);\n        setEmail(emailFromCookies);\n        let values = {\n          user: {\n            name: nameFromcookies,\n            email: emailFromCookies,\n          },\n        };\n        props.sendMessage(values, props.parent);\n        return;\n      } else {\n        setName(values.user.name);\n        setEmail(values.user.email);\n        props.sendMessage(values, props.parent);\n        return;\n      }\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const change = (e) => {\n    props.setErrorMessage('')\n    try {\n      const search = (comments) => {\n        comments.map((data) => {\n          if (data.id === props.id) {\n            props.onChange(e.target.value, data.id);\n          }\n          if (data?.replies?.length > 0) {\n            search(data.replies);\n          }\n        });\n      };\n      if (props.id === \"MainDrawer\") {\n        props.onChange(e.target.value, props.id);\n      }\n      search(props.comments);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  return (\n    <>\n      <Form\n        form={form}\n        validateMessages={props.validateMessages}\n        onFinish={checkMesssageType}\n      >\n        {(props.showDrawer || props.visibleDrawer) && (\n          <div className=\"avtar_massemmo\">\n            <div className=\"avatar_massage\">\n              <div className=\"massage_textarea\">\n                <TextArea\n                  className=\"mass_text\"\n                  placeholder=\"Join the discussion..\"\n                  rows={4}\n                  value={props.messageMain || props.inputData}\n                  onChange={change}\n                  ref={inputRef}\n                />\n\n                <div className=\"commentemoji_btn\"\n                  ref={ref}\n                  onClick={() => {\n                    setVisiblePicker(true);\n                  }}\n                >\n                  <div className=\"emojiundo_btn\">\n                    <Button\n\n                      onClick={togglePicker}\n                      className=\"emo_button\"\n                      type=\"primary\"\n                    >\n                      😀\n                    </Button>\n                    {visiblePicker && emojiPickerIsOpen && (\n                      <Picker\n                        onEmojiClick={onEmojiClick}\n                        disableSearchBar={true}\n                      />\n                    )}\n                    <Button\n                      className=\"emo_button undo\"\n                      type=\"primary\"\n                      onClick={undoText}\n                    ></Button>\n                    <Button\n                      className=\"emo_button redo\"\n                      type=\"primary\"\n                      onClick={redoText}\n                    ></Button>\n                  </div>\n\n                  <div className=\"post_comment\">\n                    <Button\n                      className=\"proceed_button\"\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                    >\n                      Post\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {props.error && <div style={{ color: \"#FF0000\" }}>{props.error}</div>}\n            <div className=\"loginwith_singup\">\n              <div className=\"username_emai\">\n                <div className=\"formitem_name\">\n                  <Form.Item name={[\"user\", \"name\"]}>\n                    <Input\n                      placeholder=\"Name\"\n                      defaultValue={nameFromcookies ? nameFromcookies : \"\"}\n                      value={name}\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    rules={[\n                      {\n                        type: \"email\",\n                      },\n                    ]}\n                    name={[\"user\", \"email\"]}\n                  >\n                    <Input\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      defaultValue={emailFromCookies ? emailFromCookies : \"\"}\n                      value={email}\n                    />\n                  </Form.Item>\n                </div>\n                <div className=\"privacy_policy\">\n                  <p className=\"privacy_ele\">\n                    *Your email address will not be published\n                  </p>\n                </div>\n                <div className=\"guest_checkbox\">\n                  <Checkbox onChange={onChangeCheckBox}>\n                    Save my name and email in this browser for the next time I\n                    comment.\n                  </Checkbox>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Form>\n    </>\n  );\n};\nexport default CustomForm;\n","\nimport { useEffect } from 'react'\n\nexport default function useOnClickOutside(ref, handler) {\n    const handleClick = (e) => {\n        try {\n            if (ref.current && !ref.current.contains(e.target)) {\n                handler()\n            }\n        } catch (error) {\n            console.log('Some error occured', error)\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('click', handleClick)\n\n        return () => {\n            document.removeEventListener('click', handleClick)\n        }\n    })\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Badge } from \"antd\";\nimport {\n  DislikeOutlined,\n  LikeOutlined,\n  MailOutlined,\n  TwitterOutlined\n} from \"@ant-design/icons\";\nimport \"./Commentcomp.scss\";\nimport { Button } from \"antd\";\nimport Sidebar from \"../Sidebar\";\nimport { insertCommets, getCommets, castVote } from \"../../apis/allPurposeApis\";\nimport Cookies from \"universal-cookie\";\nimport CustomForm from \"../CustomForm\";\nimport { Pagination } from \"antd\";\nconst cookies = new Cookies();\nfunction Commentcomp(props) {\n  const [message, setMessage] = useState({ message: \"\", id: 0 });\n  const [messageMain, setMessageMain] = useState(\"\");\n  const [checked, setchecked] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [showDrawer, setShowDrawer] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [data, setData] = useState([]);\n  const [draw, setDraw] = useState({});\n  const [totalPages, setTotalPages] = useState();\n  const [id, setId] = useState(\"\");\n  const [like_count, setlike_count] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dislikelike_count, setDislikelike_count] = useState(0);\n  const [error, setErrorMessage] = useState('');\n  const showDrawerArticle = () => {\n    setVisible(true);\n  };\n  let result = {};\n\n  useEffect(async () => {\n    result = await getCommets(props.ID, currentPage);\n    setTotalPages(result?.data?.data?.total_pages);\n    setData(result);\n\n  }, [like_count, dislikelike_count, currentPage, props.ID]);\n\n\n\n  useEffect(() => {\n    function getComments(arr) {\n      arr.length > 0 &&\n        arr.map((i) => {\n          if (i.replies?.length > 0) {\n            getComments(i.replies);\n          }\n          i[\"visibleDrawer\"] = false;\n          i[\"inputData\"] = \"\";\n        });\n      setComments(arr);\n      return;\n    }\n\n    const resp = data?.data?.data?.results || [];\n    getComments(resp);\n  }, [data, comments]);\n\n\n  const onChange = (e, messageId) => {\n    try {\n      if (messageId === \"MainDrawer\") {\n        setId(messageId);\n        setMessageMain(e);\n        setCurrentPage(1)\n      } else {\n        setId(messageId);\n        const arrayMutation = (comment, id) => {\n          comment.forEach((i) => {\n            if (i.replies.length > 0) {\n              arrayMutation(i.replies, id);\n            }\n            if (i.id === id) {\n              i.inputData = e;\n              //setDraw({});\n            }\n          });\n          setComments(comment);\n        };\n        arrayMutation(comments, messageId);\n\n        setMessage({ message: e, id: id });\n      }\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n  const validateMessages = {\n    required: \"This field is required!\",\n    types: {\n      email: \"Email is not a valid email!\",\n      number: \"${label} is not a valid number!\",\n    },\n    number: {\n      range: \"${label} must be between ${min} and ${max}\",\n    },\n  };\n  const Drawer = (e) => {\n    try {\n      e.preventDefault();\n      setShowDrawer(true);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n\n  const sendMessage = async (values, parent) => {\n    try {\n      const email = values?.user.email\n        ? values?.user.email\n        : cookies.get(\"author_email\");\n      const name = values?.user.name\n        ? values?.user.name\n        : cookies.get(\"author_name\");\n      let data = {};\n\n      if (id === \"MainDrawer\") {\n        data[\"message\"] = messageMain;\n      } else {\n        data[\"message\"] = message?.message;\n      }\n      data[\"author_name\"] = name;\n      data[\"author_email\"] = email;\n      data[\"website\"] = props.website;\n      data[\"post\"] = props.ID;\n      data[\"parent\"] = parent;\n      if (checked) {\n        cookies.set(\"author_name\", values?.user.name, { maxAge: 5000 });\n        cookies.set(\"author_email\", values?.user.email, { maxAge: 5000 });\n      }\n      const result = await insertCommets(data, props.ID, currentPage)\n      console.log(result)\n      const commentsUpdated = await getCommets(props.ID, currentPage);\n      setData(commentsUpdated);\n      setComments((oldArray) => [...oldArray, result.data.data.results]);\n      setMessageMain(\"\");\n      setMessage(\"\");\n      return result;\n    }\n    catch (e) {\n      setErrorMessage(e.response.data.errors)\n    }\n\n  };\n\n  const casetVoteFunc = async (vote, id) => {\n    const data = {\n      vote: vote,\n    };\n    try {\n      const result = await castVote(id, data);\n      setlike_count(result.data?.data?.likes);\n      setDislikelike_count(result.data?.data?.dislikes);\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n\n  const onchangePgination = async (current) => {\n    try {\n      setCurrentPage(current);\n      return;\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n\n  const openForm = (e, id) => {\n\n    try {\n      e.preventDefault();\n      const arrayMutation = (comment, id) => {\n        comment.forEach((i) => {\n          if (i.replies.length > 0) {\n            arrayMutation(i.replies, id);\n          }\n          if (i.id === id) {\n            i.visibleDrawer = !i.visibleDrawer;\n            setDraw({});\n          }\n        });\n        setComments(comment);\n      };\n      arrayMutation(comments, id);\n      return;\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n\n  const commentPannel = (comment) => {\n    try {\n\n      return (\n        comment.length > 0 &&\n        comment.map((data, index) => {\n          return (\n\n            <li className={data.parent ? data.level > 3 ? \"\" : \"ci_post\" : \"post\"}>\n              {/* <div className=\"avatar\">\n              <Avatar\n                style={{ backgroundColor: \"#dbdfe4\" }}\n                shape=\"square\"\n                size={\"100%\"}\n                icon={<UserOutlined />}\n              />\n            </div> */}\n              <div className=\"post_body\">\n                <div className=\"comment_header\">\n                  <div className=\"post_byline\">\n                    <div className=\"post_username\">\n                      <a href=\"www.google.com\" target=\"_blank\">\n                        {data?.author_name}\n                      </a>\n                    </div>\n                    <div className=\"badge\">\n                      <Badge>MOD</Badge>\n                    </div>\n                  </div>\n                  <span className=\"bullet\"></span>\n                  {data.parent_name && (\n                    <div className=\"post_user\">\n                      <Button\n                        className=\"postuser_arrow\"\n                        type=\"primary\"\n                      ></Button>\n                      <span>{data?.parent_name}</span>\n                    </div>\n                  )}\n\n                  <div className=\"post_meta\">\n                    <span>{data?.created_date}</span>\n                  </div>\n                </div>\n                <div className=\"comment_body\">\n                  <div className=\"post_comment\">\n                    <p>{data?.message}</p>\n                  </div>\n                </div>\n                <div className=\"comment_footer\">\n                  <div className=\"post_like\">\n                    <span\n                      href=\"www.google.com\"\n                      onClick={() => casetVoteFunc(1, data.id)}\n                    >\n                      <LikeOutlined />\n                      {data.likes}\n                    </span>\n                  </div>\n                  <div className=\"post_dislike\">\n                    <span\n                      href=\"www.google.com\"\n                      onClick={() => casetVoteFunc(-1, data.id)}\n                    >\n                      <DislikeOutlined />\n                      {data.dislikes}\n                    </span>\n                  </div>\n                  {!props.cannotComment && (\n                    <div className=\"reply_footer\">\n                      <span className=\"bullet\"></span>\n                      <span\n                        className=\"reply_text\"\n                        onClick={(e) => openForm(e, data.id)}\n                      >\n                        Reply\n                      </span>\n                      <span className=\"bullet\"></span>\n                    </div>\n                  )}\n                  <div className=\"share_footer\">\n                    <span>Share ›</span>\n                    <div className=\"share_hover\">\n                      <Button\n                        className=\"sharehover_icon\"\n                        type=\"primary\"\n                        icon={<TwitterOutlined />}\n                      />\n                      <Button\n                        className=\"sharehover_icon\"\n                        type=\"primary\"\n                        icon={<MailOutlined />}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {!props.cannotComment && draw && (\n                  <CustomForm\n                    setChecked={setchecked}\n                    validateMessages={validateMessages}\n                    sendMessage={sendMessage}\n                    onChange={onChange}\n                    message={message}\n                    setMessage={setMessage}\n                    visibleDrawer={data.visibleDrawer}\n                    comments={comments}\n                    id={data.id}\n                    parent={data.id}\n                    inputData={data.inputData}\n                    error={error}\n                    setErrorMessage={setErrorMessage}\n                  />\n                )}\n              </div>\n\n              {data?.replies?.length > 0 &&\n                commentPannel(data.replies)}\n            </li>\n          );\n        })\n      );\n    } catch (error) {\n      console.log(\"Some error occured\", error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"CommentcompStyles\">\n        <div className=\"main__container\">\n          <div className=\"comment_nav\">\n            <ul>\n              <li className=\"active\">\n                <Button type=\"link\">{props.commentCount} Comments</Button>\n              </li>\n              <li>\n                <Button type=\"link\" onClick={showDrawerArticle}>\n                  View all articles\n                </Button>\n              </li>\n              <li>\n                <Button type=\"link\">Dexos Privacy Policy</Button>\n              </li>\n            </ul>\n          </div>\n          {!props.cannotComment && !showDrawer && (\n            <Button\n              className=\"jointhe\"\n              type=\"button\"\n              onClick={(e) => Drawer(e)}\n            >\n              <a className=\"join_text\" href=\"www.google.com\">\n                Join the discussion\n              </a>\n            </Button>\n          )}\n\n          {!props.cannotComment ? (\n            <CustomForm\n              setChecked={setchecked}\n              setComments={setComments}\n              validateMessages={validateMessages}\n              sendMessage={sendMessage}\n              showDrawer={showDrawer}\n              onChange={onChange}\n              messageMain={messageMain}\n              setMessageMain={setMessageMain}\n              comments={comments}\n              parent={null}\n              id=\"MainDrawer\"\n              error={error}\n              setErrorMessage={setErrorMessage}\n            />\n          ) : (\n              <div className=\"cannot_cammet\">\n                Comments and reactions for this thread are now closed\n              </div>\n            )}\n          {comments.length > 0 ? <div className=\"all_post\">\n            <ul className=\"post_list\">{commentPannel(comments, draw)}</ul>\n          </div> :\n            <div>Be the first to comment</div>\n          }\n        </div>\n\n        {visible && (\n          <Sidebar\n            visible={visible}\n            setVisible={setVisible}\n            website={props.website}\n          />\n        )}\n      </div>\n      {comments.length > 0 && < Pagination\n        defaultCurrent={1}\n        defaultPageSize={10}\n        total={totalPages * 10}\n        onChange={onchangePgination}\n        current={currentPage}\n        showSizeChanger={false}\n      />}\n\n      <div className=\"FootercompStyles\">\n        <div className=\"footer_bottom\">\n          <div className=\"footer_content\">\n            <div className=\"footer_ele\">\n              <div className=\"footer_text subscribe\">\n                <span className=\"footersub_icon\">\n                  <MailOutlined />\n                </span>\n                <a href=\"www.google.com\">Subscribe</a>\n              </div>\n              {/* <div className=\"footer_text disqus\">\n                <span className=\"footersub_icon\">\n                  <MessageFilled />\n                </span>\n                <a href=\"www.google.com\">Add Disqus to your site</a>\n              </div>\n              <div className=\"footer_text notselldata\">\n                <span className=\"footersub_icon\">\n                  <WarningFilled />\n                </span>\n                <a href=\"www.google.com\">Do Not Sell My Data</a>\n              </div> */}\n            </div>\n            <div className=\"footer_logo\">DEXOS</div>\n          </div>\n        </div>\n      </div>\n    </>\n\n  );\n}\n\nexport default Commentcomp;\n","import \"./App.css\";\nimport \"./layout/common.scss\";\nimport Commentcomp from \"./components/Commentcomp/Commentcomp\";\nimport { useEffect, useState } from \"react\";\nimport { insertPost } from \"../src/apis/allPurposeApis\";\nfunction App() {\n  const [id, setID] = useState(0);\n  const [cannotComment, setCannotComment] = useState(false);\n  const [dataCount, setDataCount] = useState(0);\n  var a = document.getElementById(\"comment\");\n  const params = {\n    title: a.getAttribute(\"title\"),\n    link: a.getAttribute(\"link\"),\n    website: a.getAttribute(\"website\"),\n  };\n  useEffect(() => {\n    (async () => {\n      const result = await insertPost(params);\n      setID(result?.data?.data?.id);\n      setCannotComment(result?.data?.data?.is_closed)\n      setDataCount(result?.data?.data?.comments_count)\n    }\n    )()\n  }, [])\n  return (\n    <div className=\"App\">\n      <Commentcomp\n        ID={id}\n        website={params.website}\n        cannotComment={cannotComment}\n        commentCount={dataCount}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('comment-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}